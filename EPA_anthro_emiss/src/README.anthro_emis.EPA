
        The EPA anthro_emis utility, a single cpu executable, creates WRF gridded
        anthropogenic emissions files from (lon,lat) gridded input anthropogenic EPA
        emission files as created by the Sparse Matrix Operator Kernel (SMOKE) modeling
        system. The resulting WRF emission files are a series of files named
        wrfchemi_d<nn>_<date> with one time point in each file.  The starting
        and ending dates for the output files are specified by the start_output_time
        and stop_output_time namelist variables( see below ). The interval between
        output files is specified by the output_interval namelist variable.

	Note: When running wrf.exe with anthropogenic emission files created with this tool 
            (of the form wrfchemi_d<nn>_<date>), the WRF-Chem namelist.input variable 
            io_style_emissions, in the chem group, must be set to 2

        Throughout this note the following definitions pertain :

        <nn>   is a two digit integer representing a WRF domain
        <date> is a WRF date of the form YYYY-MM-DD_HH:MM:SS
        <DATE> is of the form YYYYMMDD

        Input EPA anthropogenic datasets
        ----- --- ------------- --------

        The input EPA anthropogenic emission files must be netcdf
        conforming datasets and have the following structure :

        (1) Each input dataset is for one input EPA type.
            EPA input files are either 2D sector or point emissions.
            Basically point emission files contain a list of emission
            values at a given (lon,lat) pair of coordinates and at a
            height above the ground level.  Sector emissions are values
            for a quadrilateral in (lon,lat) coordinates at the ground.
            The sector or point emissions sources are defined in the
            src_names namelist input variable(see example below).

        (2) A special EPA map projection, PROJ_LC_EPA, yields (lon,lat)
            pairs at the center of each sector grid cell.  The EPA map projection
            parameters are specified via global attributes.  For EPA point
            sources the (lon,lat) coordinates are unordered input variables.

        (3) One or more variables containing the actual anthropogenic
            emissions, designated as sub_categories, per EPA input file.

        Although one may use any SMOKE compliant input dataset we will
        only provide support for ACOM accessible input datasets.  
        For more information see the Users Guide on the URL:
        https://www2.acom.ucar.edu/wrf-chem/wrf-chem-tools-community
            

        Input WRF datasets
        ----- --- --------

	There must be a WRF initial condition file per WRF domain.  Standard WRF
        initial condition files are denoted :

	wrfinput_d<nn>

	Building anthro_emis
        ======== ===========

	In the anthro_emis source code directory, src, issue the command :

	make_anthro

	That's it.  If all goes well you will have the executable file anthro_emis
        in the anthro_emis source directory.  The make_anthro script is presently
        setup to compile on either Linux systems using the Portland Group Fortan90
        compiler, pgf90, or on AIX systems using the xlf90 compiler.  If you need
        to use another compiler such as the Intel Fortran90 compiler, ifort, you 
        can set the environment variable

	FC

	before invoking make_anthro.  As an example you would issue
	the command :

	export FC=ifort 

	in the sh, bash, or ksh Linux shells or

	setenv FC ifort

	in the csh or tcsh shells.

	The anthro_emis utility requires the netcdf library and make_anthro
	will attempt to locate the libnetcdf.a library.  However, this is
	not a foolproof process and thus you may need to set the environment variable
	
	NETCDF_DIR

	to the directory containing the file lib/libnetcdf.a.  As an example
        in the ksh shell, if you issued the command :

	export NETCDF_DIR=/usr/local/netcdf-4.1.2

	then make_anthro would look for the file libnetcdf.a in the
	directory /usr/local/netcdf-4.1.2/lib (make_anthro automatically
	appends the /lib string to the NETCDF_DIR string.

        If you require assistance with compiler and/or netcdf issues use the following URL:

        https://www2.acom.ucar.edu/wrf-chem/discussion-forum


	anthro_emis reads a namelist input file that specifies all aspects
	of the mapping of source datasets to WRF emission datasets and checks
        key namelist control variables for validity.  Below is a complete
        listing of all namelist control variables grouped by functionality.

	File directories
        ==== ===========

	Variable name             Variable type                               default value
	-------- ----             -------- ----                               ------- -----
        anthro_dir                character(len=132),scalar                   present working directory
        wrf_dir                   character(len=132),scalar                   present working directory

	EPA Filenames
        === =========

	Variable name             Variable type                               default value
	-------- ----             -------- ----                               ------- -----
        sec_file_prefix           character(len=132),scalar                   blank string
        sec_file_suffix           character(len=132),scalar                   blank string
        stk_file_prefix           character(len=132),scalar                   blank string
        stk_file_suffix           character(len=132),scalar                   blank string
        stk_grp_file_prefix       character(len=132),scalar                   'stack_groups_'
        stk_grp_file_suffix       character(len=132),scalar                   blank string
        sectorlist_flnm           character(len=132),scalar                   blank string
        smk_merge_flnm            character(len=132),scalar                   blank string

	Timing
        ======

	Variable name             Variable type                               default value                Units/Notes
	-------- ----             -------- ----                               ------- -----                -----------
        start_output_time         character(len=19),scalar                    blank string                 <date>
        stop_output_time          character(len=19),scalar                    blank string                 <date>
        output_interval           integer,scalar                                 3600                      seconds

	Emission Mapping
        ======== =======

	Variable name             Variable type                               default value
	-------- ----             -------- ----                               ------- -----
        emis_map                  character(len=132),array(500)                  (None)                    

	EPA Input File Names
        === ===== ==== =====
	Variable name             Variable type                               default value
	-------- ----             -------- ----                               ------- -----
        src_names                 character(len=32),array(50)                 See note below
        sub_categories            character(len=32),array(50)                 See note below
        cat_var_prefix            character(len=132),scalar                   blank_string
        cat_var_suffix            character(len=132),scalar                   blank string

	EPA Input Netcdf Parameters
        === ===== ====== ==========
	Variable name             Variable type                               default value
	-------- ----             -------- ----                               ------- -----
        src_lon_dim_name          character(len=64),scalar                        'COL'
        src_lat_dim_name          character(len=64),scalar                        'ROW'

	WRF Parameters
        === ==========
	Variable name             Variable type                               default value
	-------- ----             -------- ----                               ------- -----
        domains                   integer,scalar                                  1
        emissions_zdim_stag       integer,scalar                                  10


******************************************************************************************************
*** The following variables must be set in the input namelist file or anthro_emis will error halt. ***
******************************************************************************************************

        start_output_time
        src_names
        sub_categories
        emis_map

        If you want to use EPA 2D sector emissions you will need to set the following:

        sec_file_prefix
        sec_file_suffix

        If you want to use EPA point emissions you will need to set the following:

        stk_file_prefix
        stk_file_suffix
        stk_grp_file_suffix

        Although none of the remaining namelist variables need be set it is most likely you will 
        want to set some of the remaining variables.

******************************************************************************
***  From this point forward the {} pair is used to mark optional input.   ***
***  The actual input comprises the characters enclosed by the {} pair.    ***
***  The {} pair is NOT part of the namelist input.                        ***
***  Similarly the <> pair denotes a generic input and the <> pair is      ***
***  NOT part of the namelist input.                                       ***
******************************************************************************

        Namelist variable notes
	======== ======== =====

	wrf_dir (optional)
	-------

	  Specifies the directory where anthro_emis expects to find the WRF input
	  files wrfinput_d<nn>.  Note that wrf_directory must NOT end with a "/"
          as in :

	  /myhome/WRF_data/

          the correct setting is :

          wrf_dir = '/myhome/WRF_data'

          Defaults to the present working directory.

	anthro_dir (optional)
	----------

	  Specifies the directory where anthro_emis expects to find the 
	  anthropogenic emission datasets.  Again, note that anthro_dir
          must NOT end with a "/" as in :

	  /myhome/ANTHRO_data/

          the correct setting is :

          anthro_dir = '/myhome/ANTHRO_data'

          Defaults to the present working directory.

!+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
          Anthro_emis expects to find all EPA source emission directories,
          specified by the src_names namelist array, in the anthro_dir directory.
          Additionally, anthro_emis expects to find the EPA sector mapping table
          and the date translation table files in the anthro_emis directory.
          The sector mapping file name defaults to:

          sectorlist_<yyyy>fd_nata

          The date translation file name defaults to:

          smk_merge_dates_<yyyy>.txt

          where <yyyy> is a four digit integer taken from the first four digits
          of the namelist variable start_output_time.

          If any EPA source directory is missing anthro_emis will error halt.
          Similarly if the sector mapping or date translation file is not found
          anthro_emis will error halt.
!+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

	sec_file_prefix, sec_file_suffix (optional)
        ---------------  ---------------

          Used to form the fully annotated source emission dataset filename.  If you
          have set the following namelist settings:

          src_names(1) = 'all:epa-sector'
          sec_file_prefix = 'emis_mole_'
          sec_file_suffix = '_12US2_nobeis_2014fd_nata_cb6_14j_nohap.nc4'
          start_output_time = '2014-08-12_12:00:00'

          then anthro_emis will look for the input emission dataset:

          emis_mole_all_20140812_12US2_nobeis_2014fd_nata_cb6_14j_nohap.nc4

          in the directory <anthro_dir>/all and will error halt if it does not exist.

          Note that emission variables in the file emis_mole_all_20140812_12US2_nobeis_2014fd_nata_cb6_14j_nohap.nc4
          represent 2D emissions at the surface.


	src_names (mandatory)
	--- -----

	  Specifies a list of up to 50 EPA source anthropogenic sub directories.  Each name must be
          <= 64 characters and have the form:

          <name>:epa-sector

          or

          <name>:epa-stack

          The src_names are used to:

          (i)   delineate sub directories in the <anthro_dir> directory
          (ii)  construct the full file specification of the form:

                <anthro_dir>/filename

                Where

                filename = {sec_file_prefix} // <name> // '_' // <DATE> // {sec_file_suffix}

                or

                filename = {stk_file_prefix} // <name> // '_' // <DATE> // {stk_file_suffix}

                Where <DATE> is the date encoded as the string YYYYMMDD.

                For example, if we have the following namelist settings:

                anthro_dir      = '/myhome/ANTHRO_data'
                start_output_time = '2014-08-12_00:00:00'
                src_names(1:2)  = 'all:epa-sector','cmv_c3:epa-stack'
                sec_file_prefix = 'emis_mole_'
                sec_file_suffix = '_12US2_nobeis_2014fd_nata_cb6_14j_nohap.nc4'
                stk_file_prefix = 'inln_mole_'
                stk_file_suffix = '_12US2_cmaq_cb6_2014fd_nata_cb6_14j_nohap.nc4'

                then two example full file specifications would be:

                /myhome/ANTHRO_data/all/emis_mole_all_20140812_12US2_nobeis_2014fd_nata_cb6_14j_nohap.nc4
                /myhome/ANTHRO_data/cmv_c3/inln_mole_cmv_c3_20140812_12US2_cmaq_cb6_2014fd_nata_cb6_14j_nohap.nc4


	sub_categories (mandatory)
	--------------

	  Specifies a list of up to 50 EPA source anthropogenic species.  Each entry must be
          <= 64 characters. The sub_catagories list members are used to construct the full
          name of the source emission variables in the input emission datasets.
          
          Each source emission variable name is of the form:

          cat_var_prefix // sub_category // cat_var_suffix

          For example if we have the following namelist settings: 

          sub_category(1:2)   = 'CO','NO'

          then the sub category emission variable names would be:

          CO and NO

          The sub categories are used in all the source emission datasets and
          must be specified in the sub_categories list.  The actual sub category
          variables in each input dataset may vary from input dataset to input dataset.

          Simply put, if an emission variable, such as NO, is used in any of the
          emis_map setting, see below, then it must be in the sub_categories input array.


	cat_var_prefix, cat_var_suffix (optional)
	---------------  ---------------

	  Used to form the fully annotated source emission variable name.  If you
          have set the following namelist definitions:

          sub_categories(1) = 'industrial'
          cat_var_prefix    = 'automobile_'

          then the anthro_emis utility will look for the the input emission variable

          automobile_industrial

          and will error halt if it does not exist.

	emis_map (mandatory)
	--------

	  Specifies the mapping between WRF species anthropogenic emissions and source
          emission datasets.  The emis_map namelist variable is a character array of size 500
          with each array element <= 512 characters.

          Each entry in the is of the form :


	  <WRF_emis> -> spc_mult * <emis_name>{ + spc_mult * <emis_name> + ... }

	  Where

	  <WRF_emis> is of the form :

            <name>{(a)}

          or

            <name>{(A)}

          wherein <name> will be used to construct the actual name of the WRF species
          anthropogenic emission in the output dataset.  The actual name in the output
          dataset is of the form E_<name>.  

          If present, the "(a)" or the "(A)" string denotes the WRF output species
          to be an aerosol.  If neither the "(a)" or the "(A)" string is present the WRF
          output species is understood to be a gas.
          WRF gas phase and aerosol species have different emission units :

          gas     == mole/km^2/hr   (moles per kilometer squared per hour)
          aerosol == ug/m^2/s       (micro gram per meter squared per second)

	  spc_mult is any legal, positive fortran real or integer number.  spc_mult defaults
          to 1. and may vary from source emission species to source emission species.

	  <emis_name> is of the form :

            <src_name{(cat_mult * <cat_name>){ + <cat_mult * <cat_name> + ... }})}

	  where :

           - <src_name> matches one of the entries in the src_names list
           - cat_mult has the same definition as spc_mult
           - <cat_name> matches one of the entries in the sub_categories list

	  The following is an example of an emis_map specification;

          Example #1
          ======= ==

          src_names(1:6) = 'all:epa-sector','cmv_c3:epa-stack','othpt:epa-stack','ptegu:epa-stack','ptnonipm:epa-stack','pt_oilgas:epa-stack'
          sub_categories(1:1) = 'CO'
          cat_var_suffix  = ' '
          emis_map(1) = 'CO->all(CO)+cmv_c3(CO)+othpt(CO)+ptegu(CO)+ptnonipm(CO)+pt_oilgas(CO)'

	  maps the source sub category emission CO in the files:

          Directory                                                Filename
          ---------                                                --------
          <anthro_dir>/all                        sector_file_prefix>all_<DATE><sector_file_suffix>
          <anthro_dir>/cmv_c3                     sector_file_prefix>cmv_c3_<DATE><sector_file_suffix>
          <anthro_dir>/othpt                      sector_file_prefix>othpt_<DATE><sector_file_suffix>
          <anthro_dir>/ptegu                      sector_file_prefix>ptegu_<DATE><sector_file_suffix>
          <anthro_dir>/ptnonipm                   sector_file_prefix>_<DATE>ptnonipm<sector_file_suffix>
          <anthro_dir>/pt_oilgas                  sector_file_prefix>_<DATE>pt_oilgas<sector_file_suffix>
 
          to the output WRF emission E_CO.
          
          Note:

          - the output emission, E_CO, is assumed to be for a gas phase species
  
	start_output_time, stop_output_time, output_interval (mandatory,optional,optional)
	-----------------  ----------------  ---------------

          Both stop_output_time and output_interval are optional.
          They default to the following:

          stop_output_time = start_output_time
          output_interval  = 3600

          (output_interval is in seconds)

          If stop_output_time is assigned then it must be >= start_output_time.
          If this is not the case then anthro_emis will error halt. 

	output_interval
	---------------

          The output_interval namelist variable defines the frequency at
          which WRF output emission datasets are produced.  It is understood
          to be in seconds and defaults to value 3600 (one hour).

          Thus for the following namelist assignments:

          start_output_time  = '2010-01-01_00:00:00'
          stop_output_time   = '2010-01-02_00:00:00'
          output_interval    = 21600

          anthro_emis will output five WRF emission datasets, starting on
          2010-01-01_00:00:00 and ending on 2010-01-02_00:00:00, one every 6 hours
          between the start and stop dates.  The anthro_emis utility will
          attempt to do time interpolation on the input dataset(s) for the following times:

          2010-01-01_00:00:00
          2010-01-01_06:00:00
          2010-01-01_12:00:00
          2010-01-01_18:00:00
          2010-01-02_00:00:00

          and produce the following output datasets :

          wrfchemi_d01_2010-01-01_00:00:00
          wrfchemi_d01_2010-01-01_06:00:00
          wrfchemi_d01_2010-01-01_12:00:00
          wrfchemi_d01_2010-01-01_18:00:00
          wrfchemi_d01_2010-01-02_00:00:00

          each dataset containing emissions at one time.

	domains
	-------

	  Specifies the total number of WRF domains.  Defaults to 1.  Remember, if you set :

	  domains = 2

	  then anthro_emis will expect to find files :

	  wrfinput_d01, wrfinput_d02 in the directory indicated by the wrf_dir variable.

-------------------------------------------------------------------------------------------------

	Following is an example of a complete namelist input file.  This particular example
        is for mapping anthropogenic EPA emission sources, both sector and point, to the T1_MOZCART_KPP WRF
        chemical mechanism option and can also be used with the MOZART-MOSAIC chemical mechanism options.

        WARNING: It is up to the user to modify the mapping for use with any other chemical option. 

        Example
        =======

&CONTROL
 anthro_dir = '/myANTHRO/zulu/EPA_2014'
 wrf_dir    = '/myANTHRO/zulu/tst/data/wrf'
 src_lon_dim_name = 'COL'
 src_lat_dim_name = 'ROW'
 domains = 1

 sec_file_prefix = 'emis_mole_' 
 sec_file_suffix = '_12US2_nobeis_2014fd_nata_cb6_14j_nohap.nc4'

 stk_file_prefix = 'inln_mole_' 
 stk_file_suffix = '_12US2_cmaq_cb6_2014fd_nata_cb6_14j_nohap.nc4'
 stk_grp_file_suffix = '_12US2_2014fd_nata_cb6_14j_nohap.nc4'

 src_names(1:6) = 'all:epa-sector','cmv_c3:epa-stack','othpt:epa-stack','ptegu:epa-stack','ptnonipm:epa-stack','pt_oilgas:epa-stack'
 
 sub_categories(1:10)   = 'CO','NO','NO2','SO2','NH3','ETOH','PAR','IOLE','ETH','ETHA'
 sub_categories(11:20)  = 'OLE','PRPA','FORM','ALD2','ALDX','ACET','MEOH','KET','TOL','BENZ'
 sub_categories(21:25)  = 'XYLMN','ISOP','TERP','SULF','ETHY'
 sub_categories(26:32)  = 'PMOTHR','PEC','POC','PMC','PSO4','PNO3','PNH4'

 start_output_time = '2014-08-12_23:00:00'
 stop_output_time  = '2014-08-13_06:00:00'
 emissions_zdim_stag = 10

 emis_map(1) = 'CO->all(CO)+cmv_c3(CO)+othpt(CO)+ptegu(CO)+ptnonipm(CO)+pt_oilgas(CO)'
 emis_map(2) = 'NO->all(NO)+cmv_c3(NO)+othpt(NO)+ptegu(NO)+ptnonipm(NO)+pt_oilgas(NO)'
 emis_map(3) = 'NO2->all(NO2)+cmv_c3(NO2)+othpt(NO2)+ptegu(NO2)+ptnonipm(NO2)+pt_oilgas(NO2)'
 emis_map(4) = 'SO2->all(SO2)+cmv_c3(SO2)+othpt(SO2)+ptegu(SO2)+ptnonipm(SO2)+pt_oilgas(SO2)'
 emis_map(5) = 'NH3->all(NH3)+cmv_c3(NH3)+othpt(NH3)+ptegu(NH3)+ptnonipm(NH3)+pt_oilgas(NH3)'
 emis_map(6) = 'C2H5OH->all(ETOH)+cmv_c3(ETOH)+othpt(ETOH)+ptegu(ETOH)+ptnonipm(ETOH)+pt_oilgas(ETOH)'
 emis_map(7) = 'BIGALK->.2*all(PAR)+.2*cmv_c3(PAR)+.2*othpt(PAR)+.2*ptegu(PAR)+.2*ptnonipm(PAR)+.2*pt_oilgas(PAR)'
 emis_map(8) = 'BIGENE->all(IOLE)+cmv_c3(IOLE)+othpt(IOLE)+ptegu(IOLE)+ptnonipm(IOLE)+pt_oilgas(IOLE)'
 emis_map(9) = 'C2H4->all(ETH)+cmv_c3(ETH)+othpt(ETH)+ptegu(ETH)+ptnonipm(ETH)+pt_oilgas(ETH)'
 emis_map(10) = 'C2H6->all(ETHA)+cmv_c3(ETHA)+othpt(ETHA)+ptegu(ETHA)+ptnonipm(ETHA)+pt_oilgas(ETHA)'
 emis_map(11) = 'C3H6->all(OLE)+cmv_c3(OLE)+othpt(OLE)+ptegu(OLE)+ptnonipm(OLE)+pt_oilgas(OLE)'
 emis_map(12) = 'C3H8->all(PRPA)+cmv_c3(PRPA)+othpt(PRPA)+ptegu(PRPA)+ptnonipm(PRPA)+pt_oilgas(PRPA)'
 emis_map(13) = 'CH2O->all(FORM)+cmv_c3(FORM)+othpt(FORM)+ptegu(FORM)+ptnonipm(FORM)+pt_oilgas(FORM)'
 emis_map(14) = 'CH3CHO->all(ALD2+ALDX)+cmv_c3(ALD2+ALDX)+othpt(ALD2+ALDX)+ptegu(ALD2+ALDX)+ptnonipm(ALD2+ALDX)+pt_oilgas(ALD2+ALDX)'
 emis_map(15) = 'CH3COCH3->all(ACET)+cmv_c3(ACET)+othpt(ACET)+ptegu(ACET)+ptnonipm(ACET)+pt_oilgas(ACET)'
 emis_map(16) = 'CH3OH->all(MEOH)+cmv_c3(MEOH)+othpt(MEOH)+ptegu(MEOH)+ptnonipm(MEOH)+pt_oilgas(MEOH)'
 emis_map(17) = 'MEK->all(KET)+cmv_c3(KET)+othpt(KET)+ptegu(KET)+ptnonipm(KET)+pt_oilgas(KET)'
 emis_map(18) = 'TOLUENE->all(TOL)+cmv_c3(TOL)+othpt(TOL)+ptegu(TOL)+ptnonipm(TOL)+pt_oilgas(TOL)'
 emis_map(19) = 'BENZENE->all(BENZ)+cmv_c3(BENZ)+othpt(BENZ)+ptegu(BENZ)+ptnonipm(BENZ)+pt_oilgas(BENZ)'
 emis_map(20) = 'XYLENE->all(XYLMN)+cmv_c3(XYLMN)+othpt(XYLMN)+ptegu(XYLMN)+ptnonipm(XYLMN)+pt_oilgas(XYLMN)'
 emis_map(21) = 'ISOP->all(ISOP)+cmv_c3(ISOP)+othpt(ISOP)+ptegu(ISOP)+ptnonipm(ISOP)+pt_oilgas(ISOP)'
 emis_map(22) = 'C10H16->all(TERP)+cmv_c3(TERP)+othpt(TERP)+ptegu(TERP)+ptnonipm(TERP)+pt_oilgas(TERP)'
 emis_map(23) = 'sulf->all(SULF)+cmv_c3(SULF)+othpt(SULF)+ptegu(SULF)+ptnonipm(SULF)+pt_oilgas(SULF)'
 emis_map(24) = 'C2H2->all(ETHY)+cmv_c3(ETHY)+othpt(ETHY)+ptegu(ETHY)+ptnonipm(ETHY)+pt_oilgas(ETHY)'
 emis_map(25) = 'PM_25(A)->all(PMOTHR)+cmv_c3(PMOTHR)+othpt(PMOTHR)+ptegu(PMOTHR)+ptnonipm(PMOTHR)+pt_oilgas(PMOTHR)'
 emis_map(26) = 'BC(A)->all(PEC)+cmv_c3(PEC)+othpt(PEC)+ptegu(PEC)+ptnonipm(PEC)+pt_oilgas(PEC)'
 emis_map(27) = 'OC(A)->all(POC)+cmv_c3(POC)+othpt(POC)+ptegu(POC)+ptnonipm(POC)+pt_oilgas(POC)'
 emis_map(28) = 'PM_10(A)->all(PMC)+cmv_c3(PMC)+othpt(PMC)+ptegu(PMC)+ptnonipm(PMC)+pt_oilgas(PMC)'
 emis_map(29) = 'SO4I(A)->.15*all(PSO4)+.15*cmv_c3(PSO4)+.15*othpt(PSO4)+.15*ptegu(PSO4)+.15*ptnonipm(PSO4)+.15*pt_oilgas(PSO4)'
 emis_map(30) = 'SO4J(A)->.85*all(PSO4)+.85*cmv_c3(PSO4)+.85*othpt(PSO4)+.85*ptegu(PSO4)+.85*ptnonipm(PSO4)+.85*pt_oilgas(PSO4)'
 emis_map(31) = 'ECI(A)->.15*all(PEC)+.15*cmv_c3(PEC)+.15*othpt(PEC)+.15*ptegu(PEC)+.15*ptnonipm(PEC)+.15*pt_oilgas(PEC)'
 emis_map(32) = 'ECJ(A)->.85*all(PEC)+.85*cmv_c3(PEC)+.85*othpt(PEC)+.85*ptegu(PEC)+.85*ptnonipm(PEC)+.85*pt_oilgas(PEC)'
 emis_map(33) = 'ORGI(A)->.15*all(POC)+.15*cmv_c3(POC)+.15*othpt(POC)+.15*ptegu(POC)+.15*ptnonipm(POC)+.15*pt_oilgas(POC)'
 emis_map(34) = 'ORGJ(A)->.85*all(POC)+.85*cmv_c3(POC)+.85*othpt(POC)+.85*ptegu(POC)+.85*ptnonipm(POC)+.85*pt_oilgas(POC)'
 emis_map(35) = 'NO3I(A)->.15*all(PNO3)+.15*cmv_c3(PNO3)+.15*othpt(PNO3)+.15*ptegu(PNO3)+.15*ptnonipm(PNO3)+.15*pt_oilgas(PNO3)'
 emis_map(36) = 'NO3J(A)->.85*all(PNO3)+.85*cmv_c3(PNO3)+.85*othpt(PNO3)+.85*ptegu(PNO3)+.85*ptnonipm(PNO3)+.85*pt_oilgas(PNO3)'
 emis_map(37) = 'NH4I(A)->.15*all(PNH4)+.15*cmv_c3(PNH4)+.15*othpt(PNH4)+.15*ptegu(PNH4)+.15*ptnonipm(PNH4)+.15*pt_oilgas(PNH4)'
 emis_map(38) = 'NH4J(A)->.85*all(PNH4)+.85*cmv_c3(PNH4)+.85*othpt(PNH4)+.85*ptegu(PNH4)+.85*ptnonipm(PNH4)+.85*pt_oilgas(PNH4)'
/

        Relevant defaults :

        - cat_var_prefix = ' '
        - output_interval = 3600

        Variables set to reinforce the use of a default:

        - domains = 1
        - src_lon_dim_name = 'COL'
        - src_lat_dim_name = 'ROW'
        - emissions_zdim_stag  = 10

        Anthro_emis will attempt to :

        - read the file /myANTHRO/zulu/EPA/sectorlist_2014fd_nata
        - read the file /myANTHRO/zulu/EPA/smk_merge_dates_2014.txt
        - read the wrfinput_d01 file in the directory /myANTHRO/zulu/tst/data/wrf
        - read any sub_category variables from the EPA sector input source file :
          /myANTHRO/zulu/EPA_2014/all/emis_mole_all_<YYYYMMDD>_12US2_nobeis_2014fd_nata_cb6_14j_nohap.nc4

          where <YYYYMMDD> is the current output date as translated
                           using the smk_merge_dates_2014.txt file

        - read the EPA point source geodata files:
          /myANTHRO/zulu/EPA_2014/<SRC_DIR>/stack_groups_<SRC_DIR>_12US2_cmaq_cb6_2014fd_nata_cb6_14j_nohap.nc4

          where <SRC_DIR> = {cmv_c3, othpt, ptegu, ptnonipm, pt_oilgas}

        - read any sub_category variables from the EPA point input source file :
          /myANTHRO/zulu/EPA_2014/<SRC_DIR>/inln_mole_<SRC_DIR>_<YYYYMMDD>_12US2_cmaq_cb6_2014fd_nata_cb6_14j_nohap.nc4

          where <SRC_DIR> = {cmv_c3, othpt, ptegu, ptnonipm, pt_oilgas}
                <YYYYMMDD> is the current output date as translated
                           using the smk_merge_dates_2014.txt file

        - interpolate the EPA emission inputs to the times 2014-08-12_23:00:00,
          2014-08-13_{00,01,02,03,04,05,06}:00:00
        - output files wrfchemi_d01_<date> for the gas phase emission variables
          E_CO,E_NO,E_NO2, ..., E_C10H16,E_sulf,E_C2H2
          and for aerosol emissions variables
          E_PM_25,E_BC,E_OC, ..., E_NO3J,E_NH4I,E_NHJ4

          where <date> is the current output date in WRF format (YYYY-MM-DD_HH:MM:SS)


	Running anthro_emis
	======= ===========

	To run anthro_emis issue the command:

	anthro_emis < anthro_emis.inp {> anthro_emis.out}

        (Redirected input is required. Redirected output to anthro_emis.out is optional.
         The anthro_emis.inp and anthro_emis.out filenames are for illustration only; you
         may use any valid filename in place of anthro_emis.inp, anthro_emis.out)

	Contacts
        ========

	For questions or comments please use the URL:

	https://www2.acom.ucar.edu/wrf-chem/discussion-forum
